trigger: none

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    set -euo pipefail

    ORG="sovereignhousingassociationvsts"
    PROJECT="Enterprise%20Data%20Warehouse"

    # New parameter to input URL or ID
    PARENT_INPUT="https://dev.azure.com/sovereignhousingassociationvsts/Enterprise%20Data%20Warehouse/_workitems/edit/108342"
    # PARENT_INPUT="108342"   # alternatively just the ID

    FEATURE_TITLE="New Project Name"
    FEATURE_DESC="As per ADO template"

    USER_STORIES=(
      "Discovery|Initial background work as needed"
      "Scoping|Documented in ADO Feature"
      "Report mock-up|Evidenced in PPT or PBI"
      "Sourcing data|XL template complete and request raised with Data Engineers"
      "Data modelling|XL template complete and request raised with Data Engineers"
      "Definitions documented|Word document with sign off from stakeholders. Once agreed, enter into Purview"
      "Data validation|Dev dataset back from Data Engineers for initial data checks. Advise when complete"
      "DAX measure creation|Master dataset back from Data Engineers for DAX measure creation. Any amendments, notify Data Engineers"
      "UAT report build|Build report out from master dataset. Arrange end user testing"
      "Sign off|Completion of testing and final sign off"
    )

    # Extract work item ID from input (either URL or plain ID)
    if [[ "$PARENT_INPUT" =~ ([0-9]+)$ ]]; then
      EPIC_ID="${BASH_REMATCH[1]}"
    else
      echo "❌ Could not extract work item ID from input: $PARENT_INPUT"
      exit 1
    fi

    echo "Using parent work item ID: $EPIC_ID"

    # Fetch Area Path dynamically from the parent work item
    AREA_PATH=$(curl -sS -H "Authorization: Bearer $SYSTEM_ACCESSTOKEN" \
      "https://dev.azure.com/$ORG/Enterprise%20Data%20Warehouse/_apis/wit/workitems/$EPIC_ID?api-version=7.0" | jq -r '.fields["System.AreaPath"]')

    if [[ -z "$AREA_PATH" || "$AREA_PATH" == "null" ]]; then
      echo "❌ Failed to get Area Path for work item $EPIC_ID"
      exit 1
    fi

    echo "Parent Area Path: $AREA_PATH"

    echo "Creating Feature: $FEATURE_TITLE"

    FEATURE_JSON=$(jq -n --arg title "$FEATURE_TITLE" --arg desc "$FEATURE_DESC" --arg area "$AREA_PATH" --arg epic_url "https://dev.azure.com/$ORG/Enterprise%20Data%20Warehouse/_apis/wit/workitems/$EPIC_ID" '[ 
      {"op":"add","path":"/fields/System.Title","value":$title},
      {"op":"add","path":"/fields/System.Description","value":$desc},
      {"op":"add","path":"/fields/System.AreaPath","value":$area},
      {"op":"add","path":"/relations/-","value":{
        "rel":"System.LinkTypes.Hierarchy-Reverse",
        "url": $epic_url
      }}
    ]')

    FEATURE_CREATE_URL="https://dev.azure.com/$ORG/Enterprise%20Data%20Warehouse/_apis/wit/workitems/\$Feature?api-version=7.0"

    RESPONSE=$(curl -sS -X POST \
      -H "Content-Type: application/json-patch+json" \
      -H "Authorization: Bearer $SYSTEM_ACCESSTOKEN" \
      --data "$FEATURE_JSON" \
      "$FEATURE_CREATE_URL")

    FEATURE_ID=$(echo "$RESPONSE" | jq -r '.id')

    if [[ "$FEATURE_ID" == "null" || -z "$FEATURE_ID" ]]; then
      echo "❌ Failed to create Feature."
      echo "$RESPONSE"
      exit 1
    fi

    echo "✅ Feature created with ID: $FEATURE_ID"

    # The rest remains unchanged, using $AREA_PATH and $FEATURE_ID
    # ...
  displayName: 'Create Feature and Ordered User Stories'
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
