trigger: none

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    ORG="sovereignhousingassociationvsts"
    PROJECT="Enterprise%20Data%20Warehouse"
    AREA_PATH="Enterprise Data Warehouse\\Data and Analytics"

    EPIC_ID="108342"

    FEATURE_TITLE="New Project Name"
    FEATURE_DESC="As per ADO template"

    USER_STORIES=(
      "Story 1 Discovery|Initial background work as needed"
      "Story 2 Scoping|Documented in ADO Feature"
      "Story 3 Report mock-up|Evidenced in PPT or PBI"
      "Story 4 Sourcing data|XL template complete and request raised with Data Engineers"
      "Story 5 Data modelling|XL template complete and request raised with Data Engineers"
      "Story 6 Definitions documented|Word document with sign off from stakeholders. Once agreed, enter into Purview"
      "Story 7 Data validation|Dev dataset back from Data Engineers for initial data checks. Advise when complete"
      "Story 8 DAX measure creation|Master dataset back from Data Engineers for DAX measure creation. Any amendments, notify Data Engineers"
      "Story 9 UAT report build|Build report out from master dataset. Arrange end user testing"
      "Story 10 Sign off|Completion of testing and final sign off"
    )

    echo "Creating Feature: $FEATURE_TITLE"

    FEATURE_JSON=$(jq -n --arg title "$FEATURE_TITLE" --arg desc "$FEATURE_DESC" --arg area "$AREA_PATH" --arg epic_url "https://dev.azure.com/$ORG/$PROJECT/_apis/wit/workitems/$EPIC_ID" '[
      {"op":"add","path":"/fields/System.Title","value":$title},
      {"op":"add","path":"/fields/System.Description","value":$desc},
      {"op":"add","path":"/fields/System.AreaPath","value":$area},
      {"op":"add","path":"/relations/-","value":{
        "rel":"System.LinkTypes.Hierarchy-Reverse",
        "url": $epic_url
      }}
    ]')

    RESPONSE=$(curl -s -X POST \
      -H "Content-Type: application/json-patch+json" \
      -H "Authorization: Bearer $SYSTEM_ACCESSTOKEN" \
      --data "$FEATURE_JSON" \
      "https://dev.azure.com/$ORG/$PROJECT/_apis/wit/workitems/\$Feature?api-version=7.0")

    FEATURE_ID=$(echo "$RESPONSE" | jq -r '.id')

    if [ "$FEATURE_ID" = "null" ] || [ -z "$FEATURE_ID" ]; then
      echo "‚ùå Failed to create Feature."
      echo "$RESPONSE"
      exit 1
    fi

    echo "‚úÖ Feature created with ID: $FEATURE_ID"

    echo "Creating User Stories..."
    for story in "${USER_STORIES[@]}"; do
      TITLE="${story%%|*}"
      DESC="${story#*|}"

      US_JSON=$(jq -n --arg title "$TITLE" --arg desc "$DESC" --arg area "$AREA_PATH" --arg feature_url "https://dev.azure.com/$ORG/$PROJECT/_apis/wit/workitems/$FEATURE_ID" '[
        {"op":"add","path":"/fields/System.Title","value":$title},
        {"op":"add","path":"/fields/System.Description","value":$desc},
        {"op":"add","path":"/fields/System.AreaPath","value":$area},
        {"op":"add","path":"/relations/-","value":{
          "rel":"System.LinkTypes.Hierarchy-Reverse",
          "url": $feature_url
        }}
      ]')

      RESPONSE=$(curl -s -X POST \
        -H "Content-Type: application/json-patch+json" \
        -H "Authorization: Bearer $SYSTEM_ACCESSTOKEN" \
        --data "$US_JSON" \
        "https://dev.azure.com/$ORG/$PROJECT/_apis/wit/workitems/\$User%20Story?api-version=7.0")

      US_ID=$(echo "$RESPONSE" | jq -r '.id')

      if [ "$US_ID" = "null" ] || [ -z "$US_ID" ]; then
        echo "‚ùå Failed to create User Story: $TITLE"
        echo "$RESPONSE"
        exit 1
      fi

      echo "   ‚ûï Created User Story: $TITLE (ID: $US_ID)"
    done

    echo "üéØ All work items created successfully."
  displayName: 'Create Feature and User Stories'
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
